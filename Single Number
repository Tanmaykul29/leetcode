Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 Solution:
 class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        num_dict = {}
        if len(nums) == 1:
            return nums[0]
        for i in range(len(nums)):
            if nums[i] in num_dict:
                num_dict[nums[i]] += 1
            else:    
                num_dict[nums[i]] = 1
        for key in num_dict:
            if num_dict[key] == 1:
                return key
