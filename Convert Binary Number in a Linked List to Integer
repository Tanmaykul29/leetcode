Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

The most significant bit is at the head of the linked list.Example 1:


Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10Example 2:

Input: head = [0]
Output: 0
 

Constraints:

The Linked List is not empty.
Number of nodes will not exceed 30.
Each node's value is either 0 or 1.
Accepted
330,151
Submissions


CODE:
class Solution {
public:
    ListNode *reverseList(ListNode *head)
    {
        if(head==NULL||head->next==NULL)return head;

        ListNode *restHead=reverseList(head->next);
        ListNode *restTail=head->next;
        restTail->next=head;
        head->next=NULL;
        return restHead;
    }
    int getDecimalValue(ListNode* head) {
        ListNode *curr=reverseList(head);
        int result=0;
        int cnt=0;
        while(curr!=NULL)
        {
            result+=pow(2,cnt)*curr->val;
            cnt+=1;
            curr=curr->next;
        }
        return result;
    }
};
